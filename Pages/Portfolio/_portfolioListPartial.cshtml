@using StonksWebApp.Services
@using StonksWebApp.models
@model StonksWebApp.Services.UserSession

@functions
{
    double CalculatePortfolioValue(models.PortfolioModel model)
    {
        var netPositions = new List<PositionModel>();
        foreach (var trade in model.Trades)
        {
            if (netPositions.All(e => e.Ticker != trade.Ticker))
            {
                netPositions.Add(new PositionModel(trade.Ticker, trade.OrderType == "long", trade.OrderSize));
            }
            else
            {
                var pos = netPositions.First(e => e.Ticker == trade.Ticker);
                var diff = trade.OrderType == "long" ? trade.OrderSize : -trade.OrderSize;
                pos.Size += diff;
                if (pos.Size < 0)
                {
                    pos.IsLong = !pos.IsLong;
                    pos.Size = Math.Abs(pos.Size);
                }
            }
        }
        double value = 0;
        foreach (var position in netPositions)
        {
            double price = FetchingService.GetCurrentPrice(position.Ticker).CurrentPrice;
            double diff = position.IsLong ? price : -price;
            value += diff;
        }
        return model.Capital + value;
    }
}

@{
    var user = DatabaseConnectionService.Instance.GetUser(Model.Name);
    var portfolios = DatabaseConnectionService.Instance.GetPortfolios(user?.Username ?? "");
}

<div>
    <ul class="list-group">
        @foreach (var portfolio in portfolios)
        {
            var currentValue = CalculatePortfolioValue(portfolio);
            var initialValue = portfolio.StartCapital;
            var difference = currentValue - initialValue;
            var colour = difference > 0 ? "text-success" : "text-danger";
            <li class="list-group-item">
                <div class="d-flex justify-content-between align-items-center">
                    <span class="fw-bold">@portfolio.Name</span>
                    <span class="fw-bold">
                        <span class="me-2">Value: @currentValue</span>
                        <span class="@colour">@difference</span>
                        <button type="button" class="btn btn-danger btn-sm ms-2" hx-post="/Portfolio/Delete/@portfolio.Id" hx-confirm="Are you sure you want to delete this portfolio?" hx-target="#portfolioList">Delete</button>
                        <button type="button" class="btn btn-primary btn-sm" hx-get="/Portfolio/Rename/@portfolio.Id" hx-target="#renameModal">Rename</button>
                    </span>
                </div>
            </li>
        }
    </ul>
</div>

<div id="renameModal" class="modal fade" tabindex="-1" aria-labelledby="renameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="renameModalLabel">Rename Portfolio</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>